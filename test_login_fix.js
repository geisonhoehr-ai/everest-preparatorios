// Carregar vari√°veis de ambiente
require('dotenv').config({ path: '.env.local' })

const { createClient } = require('@supabase/supabase-js')

async function testLoginFix() {
  console.log('üß™ [TEST] Iniciando teste de corre√ß√£o do login...')
  
  // Verificar se as vari√°veis de ambiente est√£o carregadas
  if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {
    console.error('‚ùå [TEST] Vari√°veis de ambiente n√£o encontradas!')
    console.error('‚ùå [TEST] NEXT_PUBLIC_SUPABASE_URL:', process.env.NEXT_PUBLIC_SUPABASE_URL ? '‚úÖ' : '‚ùå')
    console.error('‚ùå [TEST] NEXT_PUBLIC_SUPABASE_ANON_KEY:', process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY ? '‚úÖ' : '‚ùå')
    return
  }
  
  console.log('‚úÖ [TEST] Vari√°veis de ambiente carregadas')
  
  const supabase = createClient(
    process.env.NEXT_PUBLIC_SUPABASE_URL,
    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
  )
  
  try {
    // Teste 1: Verificar se consegue obter sess√£o
    console.log('üîç [TEST] Testando obten√ß√£o de sess√£o...')
    const { data: { session }, error: sessionError } = await supabase.auth.getSession()
    
    if (sessionError) {
      console.error('‚ùå [TEST] Erro ao obter sess√£o:', sessionError)
    } else if (session?.user) {
      console.log('‚úÖ [TEST] Sess√£o encontrada:', session.user.email)
      
      // Teste 2: Verificar se consegue obter role
      console.log('üîç [TEST] Testando obten√ß√£o de role...')
      const { data: roleData, error: roleError } = await supabase
        .from('user_roles')
        .select('role')
        .eq('user_uuid', session.user.email)
        .single()
      
      if (roleError) {
        console.log('‚ÑπÔ∏è [TEST] Role n√£o encontrada (esperado para teste):', roleError.message)
      } else {
        console.log('‚úÖ [TEST] Role encontrada:', roleData.role)
      }
    } else {
      console.log('‚ÑπÔ∏è [TEST] Nenhuma sess√£o encontrada (esperado para teste)')
    }
    
    // Teste 3: Verificar se consegue fazer login (simulado)
    console.log('üîç [TEST] Testando simula√ß√£o de login...')
    console.log('‚úÖ [TEST] Cliente Supabase funcionando corretamente')
    
    console.log('‚úÖ [TEST] Teste conclu√≠do com sucesso!')
    
  } catch (error) {
    console.error('‚ùå [TEST] Erro no teste:', error)
  }
}

testLoginFix() 