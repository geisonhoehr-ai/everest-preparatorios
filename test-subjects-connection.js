// Teste de conex√£o com a tabela subjects no Supabase
const { createClient } = require('@supabase/supabase-js')

// Configura√ß√µes do Supabase (hardcoded do supabase-config.ts)
const supabaseUrl = 'https://wruvehhfzkvmfyhxzmwo.supabase.co'
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndydXZlaGhmemt2bWZ5aHh6bXdvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMxNDQ3MTgsImV4cCI6MjA2ODcyMDcxOH0.PNEZuvz_YlDixkTwFjVgERsOQdVghb3iwcCQLee9DYQ'

console.log('üîó Conectando ao Supabase...')
console.log('URL:', supabaseUrl)
console.log('Key:', supabaseKey ? 'Definida' : 'N√£o definida')

const supabase = createClient(supabaseUrl, supabaseKey)

async function testSubjectsConnection() {
  console.log('üß™ Testando conex√£o com tabela subjects...')
  
  try {
    // Testar se a tabela existe
    console.log('üìã Verificando estrutura da tabela subjects...')
    const { data: tableInfo, error: tableError } = await supabase
      .from('subjects')
      .select('*')
      .limit(1)
    
    if (tableError) {
      console.error('‚ùå Erro ao acessar tabela subjects:', tableError)
      return
    }
    
    console.log('‚úÖ Tabela subjects acess√≠vel')
    
    // Buscar todos os subjects
    console.log('üìö Buscando todas as mat√©rias...')
    const { data: subjects, error: subjectsError } = await supabase
      .from('subjects')
      .select('id, name')
      .order('name')
    
    if (subjectsError) {
      console.error('‚ùå Erro ao buscar mat√©rias:', subjectsError)
      return
    }
    
    console.log('üìä Resultado da busca:')
    console.log('Quantidade de mat√©rias:', subjects?.length || 0)
    console.log('Dados:', subjects)
    
    if (!subjects || subjects.length === 0) {
      console.log('‚ö†Ô∏è Nenhuma mat√©ria encontrada na tabela')
      console.log('üí° Vamos criar algumas mat√©rias de teste...')
      
      // Criar mat√©rias de teste
      const testSubjects = [
        { name: 'Matem√°tica' },
        { name: 'F√≠sica' },
        { name: 'Qu√≠mica' },
        { name: 'Biologia' },
        { name: 'Hist√≥ria' },
        { name: 'Geografia' }
      ]
      
      const { data: insertData, error: insertError } = await supabase
        .from('subjects')
        .insert(testSubjects)
        .select()
      
      if (insertError) {
        console.error('‚ùå Erro ao inserir mat√©rias:', insertError)
      } else {
        console.log('‚úÖ Mat√©rias criadas com sucesso:', insertData)
      }
    }
    
  } catch (error) {
    console.error('‚ùå Erro inesperado:', error)
  }
}

// Executar teste
testSubjectsConnection()
