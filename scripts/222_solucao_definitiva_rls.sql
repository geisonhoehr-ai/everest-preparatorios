-- üéØ SOLU√á√ÉO DEFINITIVA para RLS
-- Execute este script no SQL Editor do Supabase
-- Baseado na an√°lise completa do problema

-- 1. DIAGN√ìSTICO INICIAL
SELECT 
    '=== DIAGN√ìSTICO INICIAL ===' as info;

-- Verificar se o bucket existe
SELECT 
    'Bucket redacoes:' as tipo,
    name as nome,
    public,
    file_size_limit,
    allowed_mime_types
FROM storage.buckets 
WHERE name = 'redacoes';

-- Verificar pol√≠ticas existentes
SELECT 
    'Pol√≠ticas existentes:' as tipo,
    policyname as nome,
    cmd as operacao,
    roles as usuarios
FROM pg_policies 
WHERE tablename = 'objects' 
AND schemaname = 'storage'
ORDER BY policyname;

-- 2. LIMPEZA COMPLETA
SELECT 
    '=== LIMPEZA COMPLETA ===' as info;

-- Remover TODAS as pol√≠ticas existentes
DROP POLICY IF EXISTS "Allow authenticated users to manage redacoes files" ON storage.objects;
DROP POLICY IF EXISTS "Allow all authenticated users" ON storage.objects;
DROP POLICY IF EXISTS "Allow upload to redacoes" ON storage.objects;
DROP POLICY IF EXISTS "Allow view redacoes files" ON storage.objects;
DROP POLICY IF EXISTS "Allow update redacoes files" ON storage.objects;
DROP POLICY IF EXISTS "Allow delete redacoes files" ON storage.objects;
DROP POLICY IF EXISTS "Permitir upload para usu√°rios autenticados" ON storage.objects;
DROP POLICY IF EXISTS "Permitir visualiza√ß√£o para usu√°rios autenticados" ON storage.objects;
DROP POLICY IF EXISTS "Permitir atualiza√ß√£o para usu√°rios autenticados" ON storage.objects;
DROP POLICY IF EXISTS "Permitir exclus√£o para usu√°rios autenticados" ON storage.objects;
DROP POLICY IF EXISTS "Usu√°rios podem fazer upload de arquivos de reda√ß√£o" ON storage.objects;
DROP POLICY IF EXISTS "Usu√°rios podem ver arquivos de suas reda√ß√µes" ON storage.objects;
DROP POLICY IF EXISTS "Usu√°rios podem deletar arquivos de suas reda√ß√µes" ON storage.objects;
DROP POLICY IF EXISTS "Usu√°rios podem atualizar arquivos de suas reda√ß√µes" ON storage.objects;
DROP POLICY IF EXISTS "Users can upload files to redacoes bucket" ON storage.objects;
DROP POLICY IF EXISTS "Users can view files in redacoes bucket" ON storage.objects;
DROP POLICY IF EXISTS "Users can update files in redacoes bucket" ON storage.objects;
DROP POLICY IF EXISTS "Users can delete files in redacoes bucket" ON storage.objects;
DROP POLICY IF EXISTS "Allow all users" ON storage.objects;
DROP POLICY IF EXISTS "Allow upload for authenticated users" ON storage.objects;
DROP POLICY IF EXISTS "Allow view for authenticated users" ON storage.objects;

-- 3. CRIAR BUCKET SE N√ÉO EXISTIR
SELECT 
    '=== CRIANDO/VERIFICANDO BUCKET ===' as info;

INSERT INTO storage.buckets (id, name, public, file_size_limit, allowed_mime_types)
VALUES (
    'redacoes',
    'redacoes',
    false, -- PRIVADO
    52428800, -- 50MB
    ARRAY['image/jpeg', 'image/jpg', 'image/png', 'image/webp', 'application/pdf']
)
ON CONFLICT (id) DO UPDATE SET
    public = false,
    file_size_limit = 52428800,
    allowed_mime_types = ARRAY['image/jpeg', 'image/jpg', 'image/png', 'image/webp', 'application/pdf'];

-- 4. CRIAR POL√çTICAS CORRETAS
SELECT 
    '=== CRIANDO POL√çTICAS CORRETAS ===' as info;

-- Pol√≠tica 1: INSERT (Upload) - Permitir upload para usu√°rios autenticados
CREATE POLICY "Allow upload for authenticated users" 
ON storage.objects 
FOR INSERT 
TO authenticated 
WITH CHECK (bucket_id = 'redacoes');

-- Pol√≠tica 2: SELECT (Visualiza√ß√£o) - Permitir visualiza√ß√£o para usu√°rios autenticados
CREATE POLICY "Allow view for authenticated users" 
ON storage.objects 
FOR SELECT 
TO authenticated 
USING (bucket_id = 'redacoes');

-- Pol√≠tica 3: UPDATE (Atualiza√ß√£o) - Permitir atualiza√ß√£o para usu√°rios autenticados
CREATE POLICY "Allow update for authenticated users" 
ON storage.objects 
FOR UPDATE 
TO authenticated 
USING (bucket_id = 'redacoes');

-- Pol√≠tica 4: DELETE (Exclus√£o) - Permitir exclus√£o para usu√°rios autenticados
CREATE POLICY "Allow delete for authenticated users" 
ON storage.objects 
FOR DELETE 
TO authenticated 
USING (bucket_id = 'redacoes');

-- 5. VERIFICA√á√ÉO FINAL
SELECT 
    '=== VERIFICA√á√ÉO FINAL ===' as info;

-- Verificar bucket
SELECT 
    'Bucket redacoes:' as tipo,
    name as nome,
    public,
    file_size_limit,
    allowed_mime_types
FROM storage.buckets 
WHERE name = 'redacoes';

-- Verificar pol√≠ticas criadas
SELECT 
    'Pol√≠ticas criadas:' as tipo,
    policyname as nome,
    cmd as operacao,
    roles as usuarios
FROM pg_policies 
WHERE tablename = 'objects' 
AND schemaname = 'storage'
AND policyname LIKE '%authenticated%'
ORDER BY policyname;

-- Contar total de pol√≠ticas
SELECT 
    'Total de pol√≠ticas:' as tipo,
    COUNT(*) as total
FROM pg_policies 
WHERE tablename = 'objects' 
AND schemaname = 'storage'
AND policyname LIKE '%authenticated%';

-- 6. INSTRU√á√ïES PARA TESTE
SELECT 
    '=== INSTRU√á√ïES PARA TESTE ===' as info;

SELECT 
    '‚úÖ Execute este script no SQL Editor do Supabase' as instrucao;
SELECT 
    '‚úÖ Verifique se 4 pol√≠ticas foram criadas' as instrucao;
SELECT 
    '‚úÖ Teste o upload em: http://localhost:3003/redacao' as instrucao;
SELECT 
    '‚úÖ Fa√ßa login com usu√°rio autenticado' as instrucao;
SELECT 
    '‚úÖ Tente fazer upload de uma imagem ou PDF' as instrucao;
SELECT 
    '‚úÖ Verifique se n√£o h√° mais erros de RLS' as instrucao;

-- 7. RESULTADO ESPERADO
SELECT 
    '=== RESULTADO ESPERADO ===' as info;

SELECT 
    '‚úÖ 4 pol√≠ticas ativas para bucket redacoes' as resultado;
SELECT 
    '‚úÖ Bucket configurado como privado' as resultado;
SELECT 
    '‚úÖ Upload funcionando sem erros' as resultado;
SELECT 
    '‚úÖ Arquivos salvos no storage' as resultado;
SELECT 
    '‚úÖ Metadados registrados no banco' as resultado; 