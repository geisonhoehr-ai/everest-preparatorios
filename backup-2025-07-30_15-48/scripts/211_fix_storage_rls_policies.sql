-- üöÄ Script para corrigir pol√≠ticas RLS do Storage para reda√ß√µes
-- Execute este script no SQL Editor do Supabase

-- 1. Verificar se o bucket 'redacoes' existe
SELECT 
    'Status do bucket redacoes:' as info,
    CASE 
        WHEN EXISTS (
            SELECT 1 
            FROM storage.buckets 
            WHERE name = 'redacoes'
        )
        THEN '‚úÖ Bucket existe'
        ELSE '‚ùå Bucket n√£o existe'
    END as status;

-- 2. Criar bucket 'redacoes' se n√£o existir
INSERT INTO storage.buckets (id, name, public, file_size_limit, allowed_mime_types)
VALUES (
    'redacoes',
    'redacoes',
    false,
    52428800, -- 50MB
    ARRAY['image/jpeg', 'image/jpg', 'image/png', 'image/webp', 'application/pdf']
)
ON CONFLICT (id) DO NOTHING;

-- 3. Habilitar RLS no bucket
UPDATE storage.buckets 
SET public = false 
WHERE name = 'redacoes';

-- 4. Remover pol√≠ticas antigas se existirem
DROP POLICY IF EXISTS "Usu√°rios podem fazer upload de arquivos de reda√ß√£o" ON storage.objects;
DROP POLICY IF EXISTS "Usu√°rios podem ver arquivos de suas reda√ß√µes" ON storage.objects;
DROP POLICY IF EXISTS "Usu√°rios podem deletar arquivos de suas reda√ß√µes" ON storage.objects;
DROP POLICY IF EXISTS "Usu√°rios podem atualizar arquivos de suas reda√ß√µes" ON storage.objects;

-- 5. Criar pol√≠tica para INSERT (upload)
CREATE POLICY "Usu√°rios podem fazer upload de arquivos de reda√ß√£o" 
ON storage.objects 
FOR INSERT 
WITH CHECK (
    bucket_id = 'redacoes' 
    AND auth.uid() IS NOT NULL
);

-- 6. Criar pol√≠tica para SELECT (download/visualiza√ß√£o)
CREATE POLICY "Usu√°rios podem ver arquivos de suas reda√ß√µes" 
ON storage.objects 
FOR SELECT 
USING (
    bucket_id = 'redacoes' 
    AND (
        -- Usu√°rio pode ver arquivos de suas pr√≥prias reda√ß√µes
        EXISTS (
            SELECT 1 
            FROM redacoes r 
            JOIN redacao_imagens ri ON r.id = ri.redacao_id 
            WHERE ri.file_name = storage.objects.name 
            AND r.user_uuid = auth.uid()
        )
        OR
        -- Professores podem ver arquivos de reda√ß√µes de seus alunos
        EXISTS (
            SELECT 1 
            FROM redacoes r 
            JOIN redacao_imagens ri ON r.id = ri.redacao_id 
            WHERE ri.file_name = storage.objects.name 
            AND r.professor_uuid = auth.uid()
        )
    )
);

-- 7. Criar pol√≠tica para UPDATE
CREATE POLICY "Usu√°rios podem atualizar arquivos de suas reda√ß√µes" 
ON storage.objects 
FOR UPDATE 
USING (
    bucket_id = 'redacoes' 
    AND EXISTS (
        SELECT 1 
        FROM redacoes r 
        JOIN redacao_imagens ri ON r.id = ri.redacao_id 
        WHERE ri.file_name = storage.objects.name 
        AND r.user_uuid = auth.uid()
    )
);

-- 8. Criar pol√≠tica para DELETE
CREATE POLICY "Usu√°rios podem deletar arquivos de suas reda√ß√µes" 
ON storage.objects 
FOR DELETE 
USING (
    bucket_id = 'redacoes' 
    AND EXISTS (
        SELECT 1 
        FROM redacoes r 
        JOIN redacao_imagens ri ON r.id = ri.redacao_id 
        WHERE ri.file_name = storage.objects.name 
        AND r.user_uuid = auth.uid()
    )
);

-- 9. Verificar pol√≠ticas criadas
SELECT 
    'Pol√≠ticas RLS criadas para storage.objects:' as info;

SELECT 
    schemaname,
    tablename,
    policyname,
    permissive,
    roles,
    cmd,
    qual,
    with_check
FROM pg_policies 
WHERE tablename = 'objects' 
AND schemaname = 'storage'
ORDER BY policyname;

-- 10. Verificar se RLS est√° habilitado
SELECT 
    'Status RLS no storage.objects:' as info,
    CASE 
        WHEN EXISTS (
            SELECT 1 
            FROM pg_tables 
            WHERE schemaname = 'storage' 
            AND tablename = 'objects' 
            AND rowsecurity = true
        )
        THEN '‚úÖ RLS habilitado'
        ELSE '‚ùå RLS desabilitado'
    END as status;

-- 11. Habilitar RLS se n√£o estiver habilitado
ALTER TABLE storage.objects ENABLE ROW LEVEL SECURITY;

-- 12. Teste final - verificar estrutura completa
SELECT 
    'Estrutura final do sistema de reda√ß√µes:' as info;

SELECT 
    'Tabelas:' as tipo,
    table_name as nome
FROM information_schema.tables 
WHERE table_name IN ('redacoes', 'redacao_imagens', 'temas_redacao')
ORDER BY table_name;

SELECT 
    'Bucket de storage:' as tipo,
    name as nome,
    public,
    file_size_limit,
    allowed_mime_types
FROM storage.buckets 
WHERE name = 'redacoes';

SELECT 
    'Pol√≠ticas RLS:' as tipo,
    policyname as nome,
    cmd as operacao
FROM pg_policies 
WHERE tablename = 'objects' 
AND schemaname = 'storage'
ORDER BY policyname; 